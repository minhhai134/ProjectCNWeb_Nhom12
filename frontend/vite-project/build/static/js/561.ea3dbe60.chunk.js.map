{"version":3,"file":"static/js/561.ea3dbe60.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/RegisterForm.js","pages/auth/Register.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import { useState } from \"react\";\nimport * as Yup from \"yup\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// components\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\nimport { Eye, EyeSlash } from \"phosphor-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RegisterUser } from \"../../redux/slices/auth\";\n\n// ----------------------------------------------------------------------\n\nexport default function AuthRegisterForm() {\n  const dispatch = useDispatch();\n  const {isLoading} = useSelector((state) => state.auth);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const LoginSchema = Yup.object().shape({\n    displayName:Yup.string()\n    .required(\"Display name is required\"),\n    username: Yup.string()\n      .required(\"Username is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const defaultValues = {\n    displayName:\"\",\n    username: \"abcd\",\n    password: \"123467\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      console.log(data)\n      // submit data to backend\n      dispatch(RegisterUser(data));\n    } catch (error) {\n      console.error(error);\n      reset();\n      setError(\"afterSubmit\", {\n        ...error,\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3} mb={4}>\n        {!!errors.afterSubmit && (\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\n        )}\n\n        <RHFTextField name=\"displayName\" label=\"Display name\" />\n\n        <RHFTextField name=\"username\" label=\"Username\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isLoading}\n        sx={{\n          bgcolor: \"text.primary\",\n          color: (theme) =>\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          \"&:hover\": {\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          },\n        }}\n      >\n        Create Account\n      </LoadingButton>\n    </FormProvider>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Typography, Link } from '@mui/material';\n\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\n        <Typography variant=\"h4\">Get started </Typography>\n\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"body2\"> Already have an account? </Typography>\n\n          <Link component={RouterLink} to={\"/auth/login\"} variant=\"subtitle2\">\n            Sign in\n          </Link>\n        </Stack>\n      </Stack>\n      {/* Form */}\n      <RegisterForm  />\n      </>\n  );\n}\n"],"names":["FormProvider","_ref","children","onSubmit","methods","_jsx","Form","RHFTextField","name","helperText","other","control","useFormContext","Controller","render","_ref2","field","fieldState","error","TextField","fullWidth","value","message","AuthRegisterForm","dispatch","useDispatch","isLoading","useSelector","state","auth","showPassword","setShowPassword","useState","LoginSchema","Yup","shape","displayName","required","username","password","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","_jsxs","async","console","log","data","RegisterUser","Stack","spacing","mb","afterSubmit","Alert","severity","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Eye","EyeSlash","LoadingButton","color","size","variant","loading","sx","bgcolor","theme","palette","mode","Register","_Fragment","Typography","direction","Link","component","RouterLink","to","RegisterForm"],"sourceRoot":""}